import React, {useState, useEffect} from 'react'
import {Loader, Card, FormField} from '../components';

//yeni functional componentımız 2 parametre alacak: data ve title
//if içinde return olduğunda: her bir post veya image üzerinde harita (map) oluşturmak istiyoruz ve 
//kendi kendine kapanan bir card bileşeni (component) döndürmek istiyoruz
//eğer data 0'dan büyükse bu işlemler gerçekleşecek. Tüm post verilerini her bir carda geçirirken, tüm cardları işlemek istiyoruz
const RenderCards = ({data, title}) => {
  if(data?.length > 0) {return data.map((post) => <Card key={post._id} {...post} />)
  }

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl
    uppercase'>{title}</h2>
  )
}


const Home = () => {
  const[loading, setLoading] = useState(false); //başta loading false olarak ayarlamıştık, true yaparsak ekranda dönen loadingi görürüz
  const[allPosts, setAllPosts ] = useState(null); //null değerle başlıyor

  const[searchText, setSearchText]=useState(''); //başta empty yaptık, ekranda boşsa bir şey gözükmez.
  const[searchedResults, setSearchedResults] = useState(null);
  const[searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async() => {
      setLoading(true);

      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type' : 'application/json',
          },    
        })
        if(response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error)
      } finally {
        setLoading(false)
      }

    }

    fetchPosts();

  }, []); 

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
  
        setSearchedResults(searchResults);
  
      }, 500)
    );
  }

  //max-w-7xl: max width 80 Ram demek
  //mx-auto: margin X auto demek
  //mt: margin top
  //dinamik bir blok oluşturuyoruz, className='mt-10' içerisinde
  return (
    <section className='max-w-7xl mx-auto'> 
    <div>
      <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
      <p className='mt-2 text-[#666e75] text-[15px] max-w-[700px]'>
        Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
    </div>

    <div className='mt-16'>
      <FormField 
      labelName='Search posts'
      type='text'
      name='text'
      placeholder='Search posts'
      value={searchText}
      handleChange={handleSearchChange} 
      />
    </div>

  
    <div className='mt-10'>
      {loading ? (
        <div className='flex justify-center items-center'>
          <Loader />
        </div>
      ) : (
        <>
        {searchText && (
          <h2 className='font-medium text-[#666e75] text-xl mb-3'>
            Showing results for <span className='text-[#222328]'>
              {searchText}
              </span>
          </h2>
        )}
        <div className='grid lg:grid-cols-4 sm:grid-cols-3
        xs:grid-cols-2 grid-cols-1 gap-3'>
          {searchText ? (
            <RenderCards
            data={searchedResults}
            title="No search results found" />
          ) : (
            <RenderCards 
            data={allPosts}
            title="No posts found"/>
          )}

        </div>

        </>
      )}
    </div>


    </section>
  )
}

export default Home